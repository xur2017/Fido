"""
Django settings for fido_project project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b=lky+gv=n-qv=@%#gt#jefu2x7_d@z@y1t0)3^h*#b9(&bh!b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['teamfido.appspot.com', 'localhost', '127.0.0.1', '[::1]']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'pet',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fido_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fido_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


#RUN THIS FOR A LOCAL SQLITE DB!!!
DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.sqlite3',
         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
     }
 }

#Below is used for GCP ONLY
#https://stackoverflow.com/questions/55657752/django-installing-mysqlclient-error-mysqlclient-1-3-13-or-newer-is-required
# import pymysql  # noqa: 402
# pymysql.version_info = (1, 3, 13, "final", 0)
# pymysql.install_as_MySQLdb()
#
# # [START db_setup]
# if os.getenv('GAE_APPLICATION', None):
#     # Running on production App Engine, so connect to Google Cloud SQL using
#     # the unix socket at /cloudsql/<your-cloudsql-connection string>
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'HOST': '/cloudsql/teamfido:us-central1:fido-instance',
#             'USER': 'fidoAdmin',
#             'PASSWORD': 'fidoTest',
#             'NAME': 'fido',
#         }
#     }
# else:
#     # Running locally so connect to either a local MySQL instance or connect to
#     # Cloud SQL via the proxy. To start the proxy via command line:
#     #
#     #     $ cloud_sql_proxy -instances=[INSTANCE_CONNECTION_NAME]=tcp:3306
#     #
#     # See https://cloud.google.com/sql/docs/mysql-connect-proxy
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'HOST': '127.0.0.1',
#             'PORT': '3306',
#             'NAME': 'fido',
#             'USER': 'fidoAdmin',
#             'PASSWORD': 'fidoTest',
#         }
#     }
#[END db_setup]

AUTH_USER_MODEL = 'pet.CustomUser'
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
# some user input settings #

CRISPY_TEMPLATE_PACK = 'bootstrap4'

#This controls media and static files for GCP.  If local, it will use regular file storage
#otherwise it will use google cloud storage
if os.getenv('GAE_APPLICATION', None):
    os.environ['GOOGLE_APPLICATION_CREDENTIALS']=os.path.join(BASE_DIR, 'TeamFido-6ce43d9fe67b.json')
    DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
    GS_BUCKET_NAME = 'fido-media'
    GS_PROJECT_ID = 'teamfido'

    STATIC_ROOT = 'static'
    STATIC_URL = '/static/'

    MEDIA_URL = 'https://storage.googleapis.com/{}/'.format(GS_BUCKET_NAME)
    MEDIA_ROOT = "media/"

    UPLOAD_ROOT = 'media/uploads/'

    DOWNLOAD_ROOT = os.path.join(BASE_DIR, "static/media/downloads")
    DOWNLOAD_URL = STATIC_URL + "media/downloads"
else:
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

    STATIC_ROOT = 'static'
    STATIC_URL = '/static/'

    MEDIA_ROOT = 'media'
    MEDIA_URL = '/media/'

    UPLOAD_ROOT = 'uploads/'

    DOWNLOAD_URL = STATIC_URL + "media/downloads"
    DOWNLOAD_ROOT = os.path.join(BASE_DIR, "static/media/downloads")